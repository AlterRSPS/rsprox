@file:Suppress("ktlint:standard:no-wildcard-imports")

package net.rsprox.shared.filters

import net.rsprox.shared.StreamDirection
import net.rsprox.shared.StreamDirection.CLIENT_TO_SERVER
import net.rsprox.shared.StreamDirection.SERVER_TO_CLIENT
import net.rsprox.shared.filters.ProtCategory.*

@Suppress("SpellCheckingInspection")
public enum class PropertyFilter(
    public val direction: StreamDirection,
    public val category: ProtCategory,
    public val label: String,
    public val enabled: Boolean,
    public val tooltip: String? = null,
) {
    IF_BUTTON(CLIENT_TO_SERVER, INTERFACES, "Interface Buttons", true),
    IF_BUTTOND(CLIENT_TO_SERVER, INTERFACES, "Interface Dragging", false),
    IF_BUTTONT(CLIENT_TO_SERVER, INTERFACES, "Interface Targetting", true),

    OPNPC(CLIENT_TO_SERVER, NPCS, "Npc Clicks", true),
    OPNPCT(CLIENT_TO_SERVER, NPCS, "Npc Targetting", true),

    OPLOC(CLIENT_TO_SERVER, LOCS, "Loc Clicks", true),
    OPLOCT(CLIENT_TO_SERVER, LOCS, "Loc Targetting", true),

    OPOBJ(CLIENT_TO_SERVER, OBJS, "Obj Clicks", true),
    OPOBJT(CLIENT_TO_SERVER, OBJS, "Obj Targetting", true),

    OPPLAYER(CLIENT_TO_SERVER, PLAYERS, "Player Clicks", true),
    OPPLAYERT(CLIENT_TO_SERVER, PLAYERS, "Player Targetting", true),

    EVENT_APPLET_FOCUS(CLIENT_TO_SERVER, EVENTS, "Applet Focus", false),
    EVENT_CAMERA_POSITION(CLIENT_TO_SERVER, EVENTS, "Camera Position", false),
    EVENT_KEYBOARD(CLIENT_TO_SERVER, EVENTS, "Keyboard", false),
    EVENT_MOUSE_SCROLL(CLIENT_TO_SERVER, EVENTS, "Mouse Scroll", false),
    EVENT_MOUSE_MOVE(CLIENT_TO_SERVER, EVENTS, "Mouse Movement", false),
    EVENT_NATIVE_MOUSE_MOVE(CLIENT_TO_SERVER, EVENTS, "Native Mouse Movement", false),
    EVENT_MOUSE_CLICK(CLIENT_TO_SERVER, EVENTS, "Mouse Click", false),
    EVENT_NATIVE_MOUSE_CLICK(CLIENT_TO_SERVER, EVENTS, "Native Mouse Click", false),

    RESUME_PAUSEBUTTON(CLIENT_TO_SERVER, PROT_RESUME, "Pausebutton", true),
    RESUME_P_NAMEDIALOG(CLIENT_TO_SERVER, PROT_RESUME, "Name Dialog", true),
    RESUME_P_STRINGDIALOG(CLIENT_TO_SERVER, PROT_RESUME, "String Dialog", true),
    RESUME_P_COUNTDIALOG(CLIENT_TO_SERVER, PROT_RESUME, "Count Dialog", true),
    RESUME_P_OBJDIALOG(CLIENT_TO_SERVER, PROT_RESUME, "Obj Dialog", true),

    FRIENDCHAT_KICK(CLIENT_TO_SERVER, FRIENDCHAT, "Friend Chat Kick", false),
    FRIENDCHAT_SETRANK(CLIENT_TO_SERVER, FRIENDCHAT, "Friend Chat Ranks", false),
    FRIENDCHAT_JOIN_LEAVE(CLIENT_TO_SERVER, FRIENDCHAT, "Friend Chat Join/Leave", false),

    CLANCHANNEL_FULL_REQUEST(CLIENT_TO_SERVER, CLAN, "Clan Channel Requests", false),
    CLANSETTINGS_FULL_REQUEST(CLIENT_TO_SERVER, CLAN, "Clan Settings Requests", false),
    CLANCHANNEL_KICKUSER(CLIENT_TO_SERVER, CLAN, "Clan Member Kicking", false),
    AFFINEDCLANSETTINGS_ADDBANNED_FROMCHANNEL(CLIENT_TO_SERVER, CLAN, "Clan Member Banning", false),
    AFFINEDCLANSETTINGS_SETMUTED_FROMCHANNEL(CLIENT_TO_SERVER, CLAN, "Clan Member Muting", false),

    FRIENDLIST_ADD(CLIENT_TO_SERVER, SOCIAL, "Friendlist Add", false),
    FRIENDLIST_DEL(CLIENT_TO_SERVER, SOCIAL, "Friendlist Delete", false),
    IGNORELIST_ADD(CLIENT_TO_SERVER, SOCIAL, "Ignorelist Add", false),
    IGNORELIST_DEL(CLIENT_TO_SERVER, SOCIAL, "Ignorelist Delete", false),

    MESSAGE_PUBLIC(CLIENT_TO_SERVER, MESSAGING, "Public Messages", true),
    MESSAGE_PRIVATE_CLIENT(CLIENT_TO_SERVER, MESSAGING, "Private Messages", false),

    MOVE_GAMECLICK(CLIENT_TO_SERVER, OTHER, "Game Movement", false),
    MOVE_MINIMAPCLICK(CLIENT_TO_SERVER, OTHER, "Minimap Movement", false),
    CLIENT_CHEAT(CLIENT_TO_SERVER, OTHER, "Commands", false),
    SET_CHATFILTERSETTINGS(CLIENT_TO_SERVER, OTHER, "Chat Filters", false),
    CLICKWORLDMAP(CLIENT_TO_SERVER, OTHER, "Worldmap Hints", false),
    OCULUS_LEAVE(CLIENT_TO_SERVER, OTHER, "Oculus Leaving", false),
    CLOSE_MODAL(CLIENT_TO_SERVER, OTHER, "Modal Closing", false),
    TELEPORT(CLIENT_TO_SERVER, OTHER, "Teleport Requests", false),
    BUG_REPORT(CLIENT_TO_SERVER, OTHER, "Bug Reports", false),
    SEND_SNAPSHOT(CLIENT_TO_SERVER, OTHER, "Player Reports", false),
    HISCORE_REQUEST(CLIENT_TO_SERVER, OTHER, "Hiscore Requests", false),
    IF_CRMVIEW_CLICK(CLIENT_TO_SERVER, OTHER, "CRM Clicks", true),

    CONNECTION_TELEMETRY(CLIENT_TO_SERVER, OTHER, "Connection Telemetry", false),
    SEND_PING_REPLY(CLIENT_TO_SERVER, OTHER, "Ping Reply", false),
    DETECT_MODIFIED_CLIENT(CLIENT_TO_SERVER, OTHER, "Detect Modified Client", false),
    REFLECTION_CHECK_REPLY(CLIENT_TO_SERVER, OTHER, "Reflection Reply", false),
    NO_TIMEOUT(CLIENT_TO_SERVER, OTHER, "No Timeout", false),
    IDLE(CLIENT_TO_SERVER, OTHER, "Idle", false),
    MAP_BUILD_COMPLETE(CLIENT_TO_SERVER, OTHER, "Map Build Complete", false),
    MEMBERSHIP_PROMOTION_ELIGIBILITY(CLIENT_TO_SERVER, OTHER, "Membership Promo Eligibility", false),
    SOUND_JINGLEEND(CLIENT_TO_SERVER, OTHER, "Jingle End", false),
    WINDOW_STATUS(CLIENT_TO_SERVER, OTHER, "Window Status", false),

    IF_RESYNC(SERVER_TO_CLIENT, INTERFACES, "Interface Resync", false),
    IF_OPENTOP(SERVER_TO_CLIENT, INTERFACES, "Top Open", true),
    IF_OPENSUB(SERVER_TO_CLIENT, INTERFACES, "Sub Open", true),
    IF_CLOSESUB(SERVER_TO_CLIENT, INTERFACES, "Sub Close", true),
    IF_MOVESUB(SERVER_TO_CLIENT, INTERFACES, "Sub Move", true),
    IF_CLEARINV(SERVER_TO_CLIENT, INTERFACES, "Clear Inventories", true),
    IF_SETEVENTS(SERVER_TO_CLIENT, INTERFACES, "Events", true),
    IF_SETPOSITION(SERVER_TO_CLIENT, INTERFACES, "Position", true),
    IF_SETSCROLLPOS(SERVER_TO_CLIENT, INTERFACES, "Scroll Position", true),
    IF_SETROTATESPEED(SERVER_TO_CLIENT, INTERFACES, "Rotate Speed", true),
    IF_SETTEXT(SERVER_TO_CLIENT, INTERFACES, "Text", true),
    IF_SETHIDE(SERVER_TO_CLIENT, INTERFACES, "Hide", true),
    IF_SETANGLE(SERVER_TO_CLIENT, INTERFACES, "Angle", true),
    IF_SETOBJECT(SERVER_TO_CLIENT, INTERFACES, "Object", true),
    IF_SETCOLOUR(SERVER_TO_CLIENT, INTERFACES, "Colour", true),
    IF_SETANIM(SERVER_TO_CLIENT, INTERFACES, "Anim", true),
    IF_SETNPCHEAD(SERVER_TO_CLIENT, INTERFACES, "Npc Head", true),
    IF_SETNPCHEAD_ACTIVE(SERVER_TO_CLIENT, INTERFACES, "Npc Head Active", true),
    IF_SETPLAYERHEAD(SERVER_TO_CLIENT, INTERFACES, "Player Head", true),
    IF_SETMODEL(SERVER_TO_CLIENT, INTERFACES, "Model", true),
    IF_SETPLAYERMODEL(SERVER_TO_CLIENT, INTERFACES, "Player Model", true),

    MIDI_SONG(SERVER_TO_CLIENT, MIDI, "Midi Song", true),
    MIDI_SWAP(SERVER_TO_CLIENT, MIDI, "Midi Swap", true),
    MIDI_SONG_STOP(SERVER_TO_CLIENT, MIDI, "Midi Stop", true),
    MIDI_JINGLE(SERVER_TO_CLIENT, MIDI, "Jingle", true),
    SYNTH_SOUND(SERVER_TO_CLIENT, MIDI, "Synth", true),

    ZONE_HEADER(SERVER_TO_CLIENT, ZONES, "Zone Header", false),
    LOC_ADD_CHANGE(SERVER_TO_CLIENT, ZONES, "Loc Add Change", true),
    LOC_DEL(SERVER_TO_CLIENT, ZONES, "Loc Del", true),
    LOC_ANIM(SERVER_TO_CLIENT, ZONES, "Loc Anim", true),
    LOC_MERGE(SERVER_TO_CLIENT, ZONES, "Loc Merge", true),
    OBJ_ADD(SERVER_TO_CLIENT, ZONES, "Obj Add", true),
    OBJ_DEL(SERVER_TO_CLIENT, ZONES, "Obj Del", true),
    OBJ_COUNT(SERVER_TO_CLIENT, ZONES, "Obj Count", true),
    OBJ_ENABLED_OPS(SERVER_TO_CLIENT, ZONES, "Obj Enabled Ops", true),
    MAP_ANIM(SERVER_TO_CLIENT, ZONES, "Map Anim", true),
    MAP_PROJANIM(SERVER_TO_CLIENT, ZONES, "Map Proj Anim", true),
    SOUND_AREA(SERVER_TO_CLIENT, ZONES, "Area Sound", true),

    PROJANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Projectiles", true),
    MAP_ANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Map Anims", true),
    LOC_ANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Loc Anims", true),
    NPC_HEADICON_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Npc Head Icons", true),
    NPC_SPOTANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Npc Spotanims", true),
    NPC_ANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Npc Anims", true),
    PLAYER_ANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Player Anims", true),
    PLAYER_SPOTANIM_SPECIFIC(SERVER_TO_CLIENT, SPECIFIC, "Player Spotanims", true),

    PLAYER_INFO(SERVER_TO_CLIENT, INFO, "Player Info", true),
    PLAYER_EXT_INFO_INLINE(SERVER_TO_CLIENT, INFO, "Player Extended Info Inline", false),
    PLAYER_OMIT_INDEX(SERVER_TO_CLIENT, INFO, "Player Omit Index", false),
    PLAYER_REMOVAL(SERVER_TO_CLIENT, INFO, "Player Removal", false),
    PLAYER_INFO_OMIT_NO_EXTENDED_INFO(SERVER_TO_CLIENT, INFO, "Omit Players W/O Ext. Info", true),
    PLAYER_INFO_OMIT_EMPTY(SERVER_TO_CLIENT, INFO, "Omit Empty Player Info", true),
    PLAYER_INFO_LOCAL_PLAYER_ONLY(SERVER_TO_CLIENT, INFO, "Local Player Only", true),
    NPC_INFO(SERVER_TO_CLIENT, INFO, "Npc Info", true),
    NPC_EXT_INFO_INLINE(SERVER_TO_CLIENT, INFO, "Npc Extended Info Inline", false),
    NPC_OMIT_INDEX(SERVER_TO_CLIENT, INFO, "Npc Omit Index", false),
    NPC_REMOVAL(SERVER_TO_CLIENT, INFO, "Npc Removal", false),
    NPC_INFO_OMIT_NO_EXTENDED_INFO(SERVER_TO_CLIENT, INFO, "Omit Npcs W/O Ext. Info", true),
    NPC_INFO_OMIT_EMPTY(SERVER_TO_CLIENT, INFO, "Omit Empty Npc Info", true),
    SET_NPC_UPDATE_ORIGIN(SERVER_TO_CLIENT, INFO, "Npc Info Origin", false),

    CLEAR_ENTITIES(SERVER_TO_CLIENT, INFO, "Clear Entities", true),
    SET_ACTIVE_WORLD(SERVER_TO_CLIENT, INFO, "Active World", false),
    WORLDENTITY_INFO(SERVER_TO_CLIENT, INFO, "World Entity Info", false),

    REBUILD(SERVER_TO_CLIENT, MAP, "Rebuild Map", false),

    VARP(SERVER_TO_CLIENT, ProtCategory.VARP, "Varps", true),
    VARBITS(SERVER_TO_CLIENT, ProtCategory.VARP, "Varbits", true),
    OMIT_VARP_FOR_VARBITS(
        SERVER_TO_CLIENT,
        ProtCategory.VARP,
        "Omit Varp For Varbits",
        true,
        "Omits the varp packet header if all the bit changes can be explained by varbits.",
    ),
    VARP_RESET(SERVER_TO_CLIENT, ProtCategory.VARP, "Varp Reset", true),
    VARP_SYNC(SERVER_TO_CLIENT, ProtCategory.VARP, "Varp Sync", true),

    CAM_SHAKE(SERVER_TO_CLIENT, CAMERA, "Cam Shake", true),
    CAM_RESET(SERVER_TO_CLIENT, CAMERA, "Cam Reset", true),
    CAM_MOVETO(SERVER_TO_CLIENT, CAMERA, "Camera Movement", true),
    CAM_LOOKAT(SERVER_TO_CLIENT, CAMERA, "Camera Turning", true),
    CAM_MODE(SERVER_TO_CLIENT, CAMERA, "Camera Mode", true),
    CAM_TARGET(SERVER_TO_CLIENT, CAMERA, "Camera Target", false),
    OCULUS_SYNC(SERVER_TO_CLIENT, CAMERA, "Oculys Sync", true),

    UPDATE_INV(SERVER_TO_CLIENT, INVENTORIES, "Inventory Updates", true),

    MESSAGE_PRIVATE(SERVER_TO_CLIENT, MESSAGING, "Private Messages", false),
    FRIENDLIST_LOADED(SERVER_TO_CLIENT, SOCIAL, "Friendlist Loading", false),
    UPDATE_FRIENDLIST(SERVER_TO_CLIENT, SOCIAL, "Friendlist Updates", false),
    UPDATE_IGNORELIST(SERVER_TO_CLIENT, SOCIAL, "Ignorelist Updates", false),

    UPDATE_FRIENDCHAT_CHANNEL_FULL(SERVER_TO_CLIENT, FRIENDCHAT, "Friendchat Full Update", false),
    UPDATE_FRIENDCHAT_CHANNEL_SINGLEUSER(SERVER_TO_CLIENT, FRIENDCHAT, "Friendchat Single Update", false),
    MESSAGE_FRIENDCHANNEL(SERVER_TO_CLIENT, FRIENDCHAT, "Friendchat Messages", false),

    VARCLAN(SERVER_TO_CLIENT, CLAN, "Clan Vars", false),
    CLANCHANNEL(SERVER_TO_CLIENT, CLAN, "Clan Channel Updates", false),
    CLANSETTINGS(SERVER_TO_CLIENT, CLAN, "Clan Settings Updates", false),
    MESSAGE_CLANCHANNEL(SERVER_TO_CLIENT, CLAN, "Clan Messages", false),

    LOGOUT(SERVER_TO_CLIENT, OTHER, "Logout", true),

    UPDATE_RUNWEIGHT(SERVER_TO_CLIENT, OTHER, "Weight", false),
    UPDATE_RUNENERGY(SERVER_TO_CLIENT, OTHER, "Run Energy", false),
    SET_MAP_FLAG(SERVER_TO_CLIENT, OTHER, "Minimap Flag", false),
    SET_PLAYER_OP(SERVER_TO_CLIENT, OTHER, "Player Menu Ops", true),
    UPDATE_STAT(SERVER_TO_CLIENT, OTHER, "Stat Updates", true),

    RUNCLIENTSCRIPT(SERVER_TO_CLIENT, OTHER, "Clientscripts", true),
    INLINE_CLIENTSCRIPT_PARAMS(SERVER_TO_CLIENT, OTHER, "Inline Clientscript Params", false),
    TRIGGER_ONDIALOGABORT(SERVER_TO_CLIENT, OTHER, "Dialog Abort", false),
    MESSAGE_GAME(SERVER_TO_CLIENT, MESSAGING, "Game Messages", true),
    CHAT_FILTER_SETTINGS(SERVER_TO_CLIENT, OTHER, "Chat Filter Settings", false),
    UPDATE_STOCKMARKET_SLOT(SERVER_TO_CLIENT, OTHER, "Grand Exchange", true),

    HINT_ARROW(SERVER_TO_CLIENT, OTHER, "Hint Arrows", true),
    RESET_ANIMS(SERVER_TO_CLIENT, OTHER, "Reset Anims", false),
    UPDATE_REBOOT_TIMER(SERVER_TO_CLIENT, OTHER, "Reboot Timer", true),
    SET_HEATMAP_ENABLED(SERVER_TO_CLIENT, OTHER, "Heatmap", false),
    MINIMAP_TOGGLE(SERVER_TO_CLIENT, OTHER, "Minimap Toggle", true),
    SERVER_TICK_END(SERVER_TO_CLIENT, OTHER, "Server Tick End", false),
    HIDEOPS(SERVER_TO_CLIENT, OTHER, "Hide Entity Ops", true),

    URL_OPEN(SERVER_TO_CLIENT, OTHER, "Url Open", false),
    SITE_SETTINGS(SERVER_TO_CLIENT, OTHER, "Site Settings", false),
    UPDATE_UID192(SERVER_TO_CLIENT, OTHER, "Uid 192", false),
    REFLECTION_CHECKER(SERVER_TO_CLIENT, OTHER, "Reflection Checks", false),
    SEND_PING(SERVER_TO_CLIENT, OTHER, "Ping", false),
    HISCORE_REPLY(SERVER_TO_CLIENT, OTHER, "Hiscore Reply", false),

    PLAYER_CHAT(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Chat", false),
    PLAYER_FACE_ANGLE(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Face Angle", true),
    PLAYER_MOVE_SPEED(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Move Speed", false),
    PLAYER_NAME_EXTRAS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Name Extras", false),
    PLAYER_SAY(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Say", true),
    PLAYER_SEQUENCE(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Sequence", true),
    PLAYER_EXACTMOVE(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Exact Move", true),
    PLAYER_HITS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Hits & Headbars", true),
    PLAYER_TINTING(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Tinting", true),
    PLAYER_SPOTANIMS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Spotanims", true),
    PLAYER_FACE_PATHINGENTITY(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Face Pathingentity", true),
    PLAYER_APPEARANCE(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance", true),
    PLAYER_APPEARANCE_DETAILS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Details", true),
    PLAYER_APPEARANCE_STATUS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Status", false),
    PLAYER_APPEARANCE_EQUIPMENT(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Equipment", false),
    PLAYER_APPEARANCE_IDENTKIT(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Identkit", false),
    PLAYER_APPEARANCE_IF_IDENTKIT(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Interface Identkit", false),
    PLAYER_APPEARANCE_COLOURS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Colours", false),
    PLAYER_APPEARANCE_BAS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Base Anim Set", false),
    PLAYER_APPEARANCE_NAME_EXTRAS(SERVER_TO_CLIENT, PLAYER_EXTENDED_INFO, "Appearance: Name Extras", false),
    PLAYER_APPEARANCE_OBJ_TYPE_CUSTOMIZATION(
        SERVER_TO_CLIENT,
        PLAYER_EXTENDED_INFO,
        "Appearance: Obj Type Cust.",
        false,
    ),

    NPC_EXACTMOVE(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Exact Move", true),
    NPC_FACE_PATHINGENTITY(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Face Pathingentity", true),
    NPC_HITS(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Hits & Headbars", true),
    NPC_SAY(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Say", true),
    NPC_SEQUENCE(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Sequence", true),
    NPC_TINTING(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Tinting", true),
    NPC_SPOTANIMS(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Spotanims", true),
    NPC_BAS(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Base Animation Set", true),
    NPC_BODY_CUSTOMISATION(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Body Customisation", true),
    NPC_HEAD_CUSTOMISATION(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Head Customisation", true),
    NPC_LEVEL_CHANGE(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Combat Level Change", true),
    NPC_ENABLED_OPS(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Enabled Ops", true),
    NPC_FACE_COORD(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Face Coord", true),
    NPC_NAME_CHANGE(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Name Change", true),
    NPC_TRANSFORMATION(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Transformation", true),
    NPC_HEADICON_CUSTOMISATION(SERVER_TO_CLIENT, NPC_EXTENDED_INFO, "Headicon Customisation", true),

    DEPRECATED_CLIENT(CLIENT_TO_SERVER, DEPRECATED, "Deprecated", true),
    DEPRECATED_SERVER(SERVER_TO_CLIENT, DEPRECATED, "Deprecated", true),
}
